{{ if eq .machine "Shine" -}}
export AWS_PROFILE=shine
alias shine-aws-login="op run --env-file=$HOME/.config/op/shine-aws-env -- saml2aws login --force"
{{ end -}}

# History - https://registerspill.thorstenball.com/p/which-command-did-you-run-1731-days
HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000

# Immediately append to history file:
setopt INC_APPEND_HISTORY

# Record timestamp in history:
setopt EXTENDED_HISTORY

# Expire duplicate entries first when trimming history:/bin:
setopt HIST_EXPIRE_DUPS_FIRST

# Dont record an entry that was just recorded again:
setopt HIST_IGNORE_DUPS

# Delete old recorded entry if new entry is a duplicate:
setopt HIST_IGNORE_ALL_DUPS

# Do not display a line previously found:
setopt HIST_FIND_NO_DUPS

# Dont record an entry starting with a space:
setopt HIST_IGNORE_SPACE

# Dont write duplicate entries in the history file:
setopt HIST_SAVE_NO_DUPS

# Share history between all sessions:
setopt SHARE_HISTORY

# Execute commands using history (e.g.: using !$) immediatel:
unsetopt HIST_VERIFY

ZSH_THEME="robbyrussell"
zstyle ':omz:update' mode auto
plugin_repos=(
	zsh-users/zsh-syntax-highlighting
	lukechilds/zsh-nvm
)
ZSH_CUSTOM_PLUGINS="$HOME/.oh-my-zsh/custom/plugins"
for repo in $plugin_repos; do
	if [[ ! -d $ZSH_CUSTOM_PLUGINS/${repo:t} ]]; then
		git clone --depth 1 https://github.com/${repo} $ZSH_CUSTOM_PLUGINS/${repo:t}
	fi
done

# zsh-syntax-highlighting must be last
plugins+=(
	git
	zsh-nvm
	zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh
if command -v fzf &>/dev/null; then
  # Raspberry Pi apk-get installed is outdated, no --zsh flag
  {{ if eq .is_arm64_linux "true" -}}
  source /usr/share/doc/fzf/examples/key-bindings.zsh
  source /usr/share/doc/fzf/examples/completion.zsh
  {{ else -}}
  source <(fzf --zsh)
  {{ end -}}

  # The following configuration is courtesy of Josean Martinez
  # Use fd instead of find for fzf
  export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
  export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

  _fzf_compgen_path() {
    fd --hidden --exclude .git . "$1"
  }

  _fzf_compgen_dir() {
    fd --type=d --hidden --exclude .git . "$1"
  }

  # Setup fzf-git.sh
  if [[ ! -d ~/fzf-git ]]; then
    git clone --depth 1 https://github.com/junegunn/fzf-git.sh.git ~/fzf-git
  fi
  source ~/fzf-git/fzf-git.sh

  # Integrate fzf with bat and eza
  show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"
  export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
  export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

  # Advanced customization of fzf options via _fzf_comprun function
  # - The first argument to the function is the name of the command.
  # - You should make sure to pass the rest of the arguments to fzf.
  _fzf_comprun() {
    local command=$1
    shift

    case "$command" in
      cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
      export|unset) fzf --preview "eval 'echo ${}'"         "$@" ;;
      ssh)          fzf --preview 'dig {}'                   "$@" ;;
      *)            fzf --preview "$show_file_or_dir_preview" "$@" ;;
    esac
  }
else
  echo "fzf not installed"
fi

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /opt/homebrew/bin/terraform terraform

export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv &>/dev/null; then
  eval "$(pyenv init - zsh)"
else
  echo "pyenv not installed"
fi

# --- Aliases ---
# bat installs as batcat on Linux with apt
alias cat='{{ if eq .is_arm64_linux "true" }}batcat{{ else }}bat{{ end }} --paging=never -p'
alias ll='ls -a'
alias lll='ls -lha'
alias t='touch'

# Chezmoi
alias cm='chezmoi'
alias cma='chezmoi apply'

# Tmux
alias tm='tmux'
alias tma='~/tmux-setup.sh'

# Git
alias gcm='git commit --message'
alias gpo='git push -u origin HEAD'

alias gstp='git stash pop'
alias gstu='git stash -u'
alias gstm='stash save'
alias gstum='stash save -u'

{{ if eq .machine "Shine" -}}
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
export PATH=$PATH:$HOME/.maestro/bin
{{ end -}}
